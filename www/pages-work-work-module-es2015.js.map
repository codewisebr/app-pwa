{"version":3,"sources":["./src/app/pages/work/work.page.html","./src/app/pages/work/work.module.ts","./src/app/pages/work/work.page.scss","./src/app/pages/work/work.page.ts"],"names":[],"mappings":"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","file":"pages-work-work-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n      <ion-title>Work to do</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content padding>\\n      <ion-card>\\n          <ion-card-header>\\n              <ion-card-title text-center>Work to do</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n              <ion-list lines=\\\"none\\\">\\n                  <!-- se estiver vazia *lembrando q ngIf é um recurso do angular -->\\n                  <ion-item *ngIf=\\\"tasks.length < 1\\\">\\n                      <ion-label text-center text-uppercase>Não há nada...</ion-label>\\n                    </ion-item>\\n                  <!-- repete esse bloco se tiver item -->\\n                  <ion-item-sliding *ngFor=\\\"let task of tasks\\\">\\n                      <ion-item (click)=\\\"openActions(task)\\\">\\n                        <ion-label text-uppercase>{{task.name}}</ion-label>\\n                        <!-- se tuver marcado ou nao -->\\n                        <ion-icon *ngIf=\\\"!task.done\\\" slot=\\\"start\\\" name=\\\"radio-button-off\\\"></ion-icon>\\n                        <ion-icon *ngIf=\\\"task.done\\\" slot=\\\"start\\\" name=\\\"checkmark-circle\\\" color=\\\"success\\\"></ion-icon>\\n                      </ion-item>\\n                      <ion-item-options side=\\\"end\\\">\\n                        <ion-item-option (click)=\\\"delete(task)\\\" color=\\\"danger\\\">Excluir</ion-item-option>\\n                      </ion-item-options>\\n                    </ion-item-sliding>\\n                </ion-list>\\n                <br>\\n              <ion-button color=\\\"primary\\\" (click)=abrir()>Adicionar</ion-button>\\n          </ion-card-content>\\n      </ion-card>\\n  </ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { WorkPage } from './work.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WorkPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [WorkPage]\n})\nexport class WorkPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3dvcmsvd29yay5wYWdlLnNjc3MifQ== */\"","import { AuthService } from 'src/app/services/auth.service';\nimport { MenuController, ToastController, AlertController, ActionSheetController } from '@ionic/angular';\nimport { User } from '../../model/user.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-work',\n  templateUrl: './work.page.html',\n  styleUrls: ['./work.page.scss'],\n})\nexport class WorkPage implements OnInit {\n\n  user: User;\n  tasks: any[] = [];\n\n  constructor(\n    private menu: MenuController, \n    private authService: AuthService, \n    private toastCtrl : ToastController, \n    private alertCtrl : AlertController, \n    private actionSheetCtrl : ActionSheetController\n  ) {\n    this.menu.enable(true);\n    let tasksJson = localStorage.getItem('taskbd');\n    if(tasksJson != null){\n      this.tasks = JSON.parse(tasksJson)\n    }\n   }\n\n  ngOnInit() {\n  }\n  \n  async abrir()\n  {\n    let alert = await this.alertCtrl.create({\n      header: 'Adicionar tarefa',\n      inputs: [\n        {\n          name: 'taskToDo',\n          type: 'text',\n          placeholder: 'tarefa a fazer'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancelar',\n          //role cancel deixa ele como segunda opcao\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: ()=>{\n            //sconsole.log('cancelado')\n          }\n        },\n        {\n          text: 'Ok',\n          handler: (form)=> {\n            //console.log(form),\n            this.add(form.taskToDo);\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async add(taskToDo : string){\n    // se nao tiver valor\n    if(taskToDo.trim().length <1){\n      const toast = await this.toastCtrl.create({\n        message: 'Digite alguma informação!',\n        duration: 2000,\n        position: 'top'\n      });\n      toast.present();\n      return;\n    }\n    let task = {name: taskToDo, done: false};\n    this.tasks.push(task);\n    this.updateLocalStorage();\n  }\n\n  async openActions(task : any){\n    const actionSheet = await this.actionSheetCtrl.create({\n      header: \"O que deseja fazer?\",\n      buttons: [{\n        text: task.done ? 'Desmarcar' : 'Marcar',\n        icon: task.done ? 'radio-button-off' : 'checkmark-circle',\n        handler:() => {\n          task.done = !task.done;\n          this.updateLocalStorage();\n        }\n      },\n      {\n        text: 'Cancelar',\n        icon:'close',\n        //role cancel deixa ele como segunda opcao\n        role: 'cancel',\n        handler: ()=>{\n          //console.log('cancelado')\n        }\n      }]\n    });\n    await actionSheet.present();\n  }\n\n  updateLocalStorage(){\n    // JSON transforma em string\n    localStorage.setItem('taskbd', JSON.stringify(this.tasks));\n  }\n\n  delete(task : any){\n    this.tasks = this.tasks.filter(taskArray => task != taskArray);\n    this.updateLocalStorage();\n  }\n}\n\n"],"sourceRoot":""}